// apply plugin: 'checkstyle'
apply plugin: 'findbugs'

// Add checkstyle, findbugs, pmd and lint to the check task.
//check.dependsOn  'checkstyle', 'findbugs', 'pmd', 'lint'
check.dependsOn 'lint', 'findbugs'

// task checkstyle(type: Checkstyle) {
//     configFile file("${project.rootDir}/quality/checkstyle/checkstyle.xml")
//     configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/quality/checkstyle/suppressions.xml").absolutePath
//     source 'src/main/java'
//     include '**/*.java'
//     exclude '**/gen/**'

//     classpath = files()
// }


task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/quality/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/library/build/intermediates/classes")

    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

android {
    lintOptions {
        abortOnError true

        lintConfig file("${project.rootDir}/quality/lint/lint.xml")

        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
    }
}